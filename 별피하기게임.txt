#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include<time.h>
#include<stdlib.h>

#define WIDTH 20
#define HEIGHT 20
#define p 112 // 일시정지
#define P 80 // 일시정지

typedef struct
{
	int x; 
	int y;
	int state;
}Star; // 떨어지는 별
typedef struct
{
	int x;
}Player; // 플레이어 사각형

Star star[15];
Player player;
int speed; // 게임속도
int score = 0; // 점수
int stage = 1; // 스테이지

typedef enum { NOCURSOR, SOLIDCURSOR, NORMALCURSOR } CURSOR_TYPE; //커서숨기는 함수에 사용되는 열거형 
void PrintTitle(); // 타이틀화면 출력
void GameStart(); // 게임시작
void GameOver(); // 게임종료
void Pause(); // 일시정지
void DrawBoard(); // 보드판 출력
void MovePlayer(); // 플레이어가 움직이도록 하는 함수.
void DropStar(); // 별을 랜덤으로 생성하여 떨어뜨리는 함수.
void CrashPlayer(); // 플레이어가 떨어지는 별에 닿았을 때 처리하는 함수.
void DifficultyControl(int score); // 일정 점수 도달 시 다음 스테이지로 넘기는 함수.
void NextStage(); // 다음 스테이지로 넘어가는 함수.
void gotoxy(short x, short y); // 커서 이동하는 함수.
void setcursortype(CURSOR_TYPE c); // 커서 없애는 함수.
int isKeyDown(int key); // 키보드의 입력값을 리턴하는 함수.

int main() {
	setcursortype(NOCURSOR); //커서 없앰 
	PrintTitle();
	GameStart();
	return 0;
}
// 타이틀화면 출력.
void PrintTitle() {
	int x = 5; //타이틀화면이 표시되는 x좌표 
	int y = 4; //타이틀화면이 표시되는 y좌표 
	gotoxy(x, y + 0); printf("■□□□■■■□□■■□□■■"); Sleep(100);
	gotoxy(x, y + 1); printf("■■■□  ■□□    ■■□□■"); Sleep(100);
	gotoxy(x, y + 2); printf("□□□■              □■  ■"); Sleep(100);
	gotoxy(x, y + 3); printf("■■□■■  □  ■  □□■□□"); Sleep(100);
	gotoxy(x, y + 4); printf("■■  ■□□□■■■□■■□□"); Sleep(100);
	gotoxy(x + 5, y + 2); printf("별 피하기 게임"); Sleep(100);
	gotoxy(x, y + 7); printf("Please Enter Any Key to Start..");
	gotoxy(x, y + 10); printf("◁  ▷ : Left / Right");
	gotoxy(x, y + 12); printf("   P   : Pause");
	gotoxy(x, y + 14); printf("  ESC  : Quit");
	while (1) {
		if (kbhit())
			break;
	}
	while (kbhit()) getch(); //버퍼에 기록된 키값을 버림
}
// 게임을 시작시키는 함수.
void GameStart() {
	system("cls");
	DrawBoard();
	for (int i = 0; i < 15; i++) {
		star[i].state = FALSE;
		star[i].x = i + 3;
		star[i].y = 2;
	}
	player.x = WIDTH / 2;
	gotoxy(player.x, HEIGHT); printf("■");

	while (1) {
		DifficultyControl(score);
		Sleep(speed); // 게임 속도 조절
		gotoxy(23, 11); printf(" YOUR SCORE : %6d", score); // 스코어 갱신
		MovePlayer();
		DropStar();
		CrashPlayer();

		// p나 P 입력시 일시 정지
		if (isKeyDown(p) | isKeyDown(P)) {
			Pause(); 
		}
		// esc 누를시 게임 종료
		if (isKeyDown(VK_ESCAPE)) {
			GameOver();
		}
	}
}
// 게임을 종료시키는 함수.
void GameOver() {
	int x = 5;
	int y = 5;
	system("cls");
	gotoxy(x, y + 0); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤"); //게임오버 메세지 
	gotoxy(x, y + 1); printf("▤                              ▤");
	gotoxy(x, y + 2); printf("▤  +-----------------------+   ▤");
	gotoxy(x, y + 3); printf("▤  |  G A M E  O V E R..   |   ▤");
	gotoxy(x, y + 4); printf("▤  +-----------------------+   ▤");
	gotoxy(x, y + 5); printf("▤                              ▤");
	gotoxy(x, y + 6); printf("▤  YOUR SCORE: %6d          ▤", score);
	gotoxy(x, y + 7); printf("▤                              ▤");
	gotoxy(x, y + 8); printf("▤                              ▤");
	gotoxy(x, y + 9); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤");
	while (kbhit()) getch();
	gotoxy(0, 0);
	exit(0);
}
void Pause() {
	system("cls");
	int x = 5;
	int y = 5;
	gotoxy(x, y + 0); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤");
	gotoxy(x, y + 1); printf("▤                             ▤");
	gotoxy(x, y + 2); printf("▤  +---------------------+    ▤");
	gotoxy(x, y + 3); printf("▤  |      P A U S E      |    ▤");
	gotoxy(x, y + 4); printf("▤  +---------------------+    ▤");
	gotoxy(x, y + 5); printf("▤  Press any key to resume..  ▤");
	gotoxy(x, y + 6); printf("▤                             ▤");
	gotoxy(x, y + 7); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤");

	while (kbhit()) getch(); //버퍼에 기록된 키값을 버림

	while (1) {
		if (kbhit())
			break;
	}
	GameStart();
}
void DrawBoard() {
	system("cls");
	for (int i = 0; i < HEIGHT; i++) {
		gotoxy(2, 2 + i);
		printf("▩");
		gotoxy(HEIGHT - 2, 2 + i);
		printf("▩");
	}
	for (int i = 1; i <  WIDTH - 2; i++) {
		gotoxy(i + 1, WIDTH + 1);
		printf("▩");
	}
	int y = 3;            
	gotoxy(23, y + 6); printf(" STAGE : %d", stage);
	gotoxy(23, y + 8); printf(" YOUR SCORE : %6d", score);
	gotoxy(23, y + 10); printf("◁  ▷ : Left / Right");
	gotoxy(23, y + 12); printf(" P   : Pause");
	gotoxy(23, y + 14); printf("ESC  : Quit");
}
void MovePlayer() {
	if (isKeyDown(VK_LEFT) && player.x > 3) {
		gotoxy(player.x, HEIGHT);  printf(" ");
		player.x--;
		gotoxy(player.x, HEIGHT);  printf("■");
	}
	if (isKeyDown(VK_RIGHT) && player.x < WIDTH - 3) {
		gotoxy(player.x, HEIGHT);  printf(" ");
		player.x++;
		gotoxy(player.x, HEIGHT);  printf("■");
	}
}
void DropStar() {
	int starindex = rand() % 15;
	star[starindex].state = TRUE;
	for (int i = 0; i < 15; i++) {
		if (star[i].state) {
			gotoxy(star[i].x, star[i].y);  printf(" ");
			star[i].y++;
			gotoxy(star[i].x, star[i].y);  printf("★");
		}
	}
	for (int i = 0; i < 15; i++) {
		if (star[i].y == 21) {
			score += 100;
			gotoxy(star[i].x, star[i].y);  printf("▩");
			star[i].state = FALSE;
			star[i].y = 2;
			if (star[i].x == player.x)
				GameOver();
		}
	}
}
void CrashPlayer() {
	for (int i = 0; i < 15; i++) {
		if (star[i].x == player.x && star[i].y == 20) {
			GameOver();
		}
	}
}
void DifficultyControl(int score) {
	if (score == 0)
		speed = 100;
	else if (score == 10000) {
		speed = 80;
		NextStage();
	}
	else if (score == 25000) {
		speed = 50;
		NextStage();
	}
	else if (score == 45000) {
		speed = 30;
		NextStage();
	}
	else if (score == 70000) {
		speed = 15;
		NextStage();
	}
	else if (score == 100000) {
		GameOver();
	}
}
void NextStage() {
	score += 100;
	stage++;
	system("cls");
	int x = 5;
	int y = 5;
	gotoxy(x, y + 0); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤");
	gotoxy(x, y + 1); printf("▤                                ▤");
	gotoxy(x, y + 2); printf("▤  +---------------------+       ▤");
	gotoxy(x, y + 3); printf("▤  |    Stage Celar!!    |       ▤");
	gotoxy(x, y + 4); printf("▤  +---------------------+       ▤");
	gotoxy(x, y + 5); printf("▤  Press any key to NextStage..  ▤");
	gotoxy(x, y + 6); printf("▤                                ▤");
	gotoxy(x, y + 7); printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤");

	while (kbhit()) getch(); //버퍼에 기록된 키값을 버림

	while (1) {
		if (kbhit())
			break;
	}
	GameStart();
}
// 커서를 움직이는 함수.
void gotoxy(short x, short y)
{
	//COORD : window.h에 있는 구조체, {SHORT x, SHORT y} 로 구성되어 있다.
	COORD pos = { x * 2, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}
//커서숨기는 함수
void setcursortype(CURSOR_TYPE c) { 
	CONSOLE_CURSOR_INFO CurInfo;

	switch (c) {
	case NOCURSOR:
		CurInfo.dwSize = 1;
		CurInfo.bVisible = FALSE;
		break;
	case SOLIDCURSOR:
		CurInfo.dwSize = 100;
		CurInfo.bVisible = TRUE;
		break;
	case NORMALCURSOR:
		CurInfo.dwSize = 20;
		CurInfo.bVisible = TRUE;
		break;
	}
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &CurInfo);
}
// 키 입력시 값 반환하는 함수.
int isKeyDown(int key)
{
	return ((GetAsyncKeyState(key) & 0x8000) != 0);
}

